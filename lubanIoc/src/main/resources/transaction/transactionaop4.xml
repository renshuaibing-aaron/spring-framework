<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!--数据源-->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<property name="url" value="jdbc:mysql://10.1.168.56:3306/activity?useUnicode=true"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="username" value="root"/>
		<property name="password" value="Abc12345"/>
	</bean>

	<!--jdbcTemplate-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--事务管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<context:component-scan base-package="com.aaron.ren.transaction.aop"/>


	<!--这个就相当于是开启事务机制 也是springioc的自定义标签 然后对有注解的事务进行aop-->
	<!--开启tx注解  这个是必须要有的 没有这个 将不会开启事务机制-->
	<!--这里是自定义注解 需要用自定义解析器解析, 这里的作用是 @EnableTransactionManagement 一样的-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!--
	在需要开启事务的方法上加上@Transactional注解即可，这里需要注意的是，当<tx:annotation-driven/>标签在不指定transaction-manager属性的时候，
	会默认寻找id固定名为transactionManager的bean作为事务管理器，
	如果没有id为transactionManager的bean并且在使用@Transactional注解时也没有指定value（事务管理器），程序就会报错-->
</beans>